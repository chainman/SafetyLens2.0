package com.example.administrator.safetylens;

import android.content.Context;

import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.model.LatLng;
import com.google.maps.android.data.kml.KmlContainer;
import com.google.maps.android.data.kml.KmlLayer;
import com.google.maps.android.data.kml.KmlPlacemark;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Stores all raw data of firing areas
 */
public class FiringAreaData {
    private Map<String, ArrayList<LatLng>> firingData;

    FiringAreaData(Context context, GoogleMap mMap){
        firingData = new HashMap<String, ArrayList<LatLng>>();
        //firingData.put("",new double[]{});

        List<LatLng> latLngList = new ArrayList<>();
        try {
            KmlLayer layer = new KmlLayer(mMap, R.raw.firing_areas, context);
            layer.addLayerToMap();
            for(KmlContainer container:layer.getContainers())
                for(KmlContainer nestedContainer : container.getContainers()){
                    if(nestedContainer.hasPlacemarks())
                        for(KmlPlacemark placemark:nestedContainer.getPlacemarks()){
                            firingData.put(placemark.getProperty("name"),(ArrayList<LatLng>) placemark.getGeometry().getGeometryObject());
                        }
                }
            layer.removeLayerFromMap();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    Map<String, ArrayList<LatLng>> getFiringData(){return firingData;}
}
/*
firingData.put("123א",new double[]{35.70878,	33.2291,	35.70905,	33.22969,	35.70945,	33.22901,	35.70958,	33.22868,	35.70958,	33.22676,	35.70945,	33.22654,	35.70945,	33.22609,	35.70958,	33.22586,	35.70958,	33.22541,	35.70971,	33.22528,	35.70972,	33.22507,	35.70986,	33.22495,
                35.70986,	33.22495,	35.71012,	33.22450,	35.71012,	33.22439,	35.71052,	33.22417,	35.71066,	33.22404,	35.71147,	33.22404,	35.71161,	33.22415,	35.71214,	33.22438,	35.71228,	33.22438,	35.71242,	33.22449,	35.71255,	33.22449,	35.71269,	33.22470,
                35.71283,	33.22483,	35.71282,	33.22492,	35.71309,	33.22516,	35.71336,	33.22528,	35.71444,	33.22527,	35.71471,	33.2250,	35.71498,	33.22550,	35.71498,	33.22561,	35.71526,	33.22573,	35.71552,	33.22594,	35.71552,	33.22617,	35.71566,	33.22629,
                35.71565,	33.22639,	35.71592,	33.2262,	35.71592,	33.22685,	35.71606,	33.22708,	35.71606,	33.22719,	35.71619,	33.22730,	35.71619,	33.22741,	35.71647,	33.22763,	35.71674,	33.2275,	35.71714,	33.22786,	35.71795,	33.22785,	35.71809,	33.22797,
                35.71862,	33.22797,	35.71876,	33.22808,	35.71903,	33.22807,	35.71930,	33.22830,	35.71956,	33.22841,	35.71971,	33.22863,	35.72011,	33.22909,	35.72065,	33.22829,	35.72334,	33.22625,	35.72428,	33.22550,	35.72442,	33.22569,	35.72483,	33.22569,
                35.72507,	33.22558,	35.72616,	33.22502,	35.72629,	33.22490,	35.72698,	33.22468,	35.72724,	33.22444,	35.72754,	33.2243,	35.72765,	33.22443,	35.72792,	33.22421,	35.72806,	33.22421,	35.72820,	33.22409,	35.72846,	33.22398,	35.72860,	33.22387,
                35.72941,	33.22352,	35.72981,	33.22341,	35.73008,	33.22341,	35.73034,	33.22319,	35.73075,	33.22308,	35.73129,	33.22307,	35.73169,	33.22285,	35.73211,	33.22273,	35.73264,	33.22250,	35.73318,	33.22250,	35.73345,	33.22239,	35.73371,	33.22239,
                35.73399,	33.2227,	35.73412,	33.22227,	35.73425,	33.22216,	35.73520,	33.22215,	35.73560,	33.22204,	35.73602,	33.22203,	35.73614,	33.22192,	35.73709,	33.22192,	35.73709,	33.22056,	35.73721,	33.21968,	35.73722,	33.21330,	35.73666,	33.20649,
                35.73665,	33.20533,	35.73625,	33.20299,	35.73625,	33.20219,	35.73625,	33.20219,	35.73598,	33.20185,	35.73597,	33.20173,	35.73586,	33.20151,	35.73584,	33.20071,	35.73570,	33.20060,	35.73570,	33.20039,	35.73557,	33.20026,	35.73544,	33.20006,
                35.73517,	33.19981,	35.73504,	33.19960,	35.73503,	33.19935,	35.73490,	33.19915,	35.73490,	33.19858,	35.73476,	33.19835,	35.73476,	33.19756,	35.73462,	33.19745,	35.73462,	33.18865,	35.72612,	33.18869,	35.72531,	33.18880,	35.71278,	33.18884,
                35.71251,	33.18895,	35.71021,	33.18897,	35.70982,	33.18907,	35.70698,	33.18909,	35.70659,	33.18920,	35.70576,	33.18921,	35.70525,	33.18932,	35.70239,	33.18933,	35.70214,	33.18922,	35.69821,	33.18924,	35.69809,	33.18934,	35.69336,	33.18936,
                35.69310,	33.18947,	35.69311,	33.19196,	35.69324,	33.19219,	35.69324,	33.19478,	35.69352,	33.19568,	35.69351,	33.19635,	35.69365,	33.19682,	35.69365,	33.19805,	35.69378,	33.19850,	35.69379,	33.19884,	35.69392,	33.19905,	35.69393,	33.19952,
                35.69406,	33.19985,	35.69405,	33.20019,	35.69420,	33.20030,	35.69419,	33.20121,	35.69432,	33.20165,	35.69433,	33.20257,	35.69459,	33.20415,	35.69460,	33.20550,	35.69555,	33.20751,	35.69555,	33.20786,	35.69568,	33.20820,	35.69569,	33.21249,
                35.69569,	33.21365,	35.69569,	33.21542,	35.69637,	33.21620,	35.69637,	33.21654,	35.69679,	33.21811,	35.69744,	33.21879,	35.69758,	33.21901,	35.69799,	33.21913,	35.69825,	33.21947,	35.69893,	33.21980,	35.69921,	33.22002,	35.69947,	33.22014,
                35.69961,	33.22013,	35.69987,	33.22046,	35.69988,	33.22059,	35.70001,	33.22081,	35.70000,	33.22126,	35.69973,	33.22172,	35.69947,	33.22194,	35.69919,	33.22194,	35.69893,	33.22205,	35.69812,	33.22206,	35.69771,	33.22217,	35.69744,	33.22218,
                35.69704,	33.22229,	35.69677,	33.22229,	35.69637,	33.22271,	35.69638,	33.22235,	35.69638,	33.22364,	35.69651,	33.22387,	35.69650,	33.22499,	35.69718,	33.22559,	35.69908,	33.22634,	35.70769,	33.22936,	35.70824,	33.22947});
        firingData.put("69ב",new double[]{35.10471,	33.06166,	35.10528,	33.08999,	35.98612,	33.08995,	34,98611,	33.06166});
        firingData.put("133",new double[]{35.86387,	32.92181,	35.85416,	32.93023,	35.86144,	32.93450,	35.86213,	32.93429,	35.86243,	32.93384,	35.86324,	32.93351,	35.86355,	32.93292,	35.86422,	32.93272,	35.87140,	32.92742});
        firingData.put("62",new double[]{34.98447,	33.83601,	34.97990,	33.83667,	34.81227,	33.92125,	34.88145,	33.97786,	34.98413,	33.00314});
        firingData.put("30",new double[]{34.88311,	33.71533,	34.94294,	33.71500,	34.92752,	33.68168,	32.68165});
 */